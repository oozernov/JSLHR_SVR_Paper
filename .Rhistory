outlier<-read.csv("../motion_outlier_data.csv")
names(outlier)[1] <- "Subject"
data_all_outlier <- merge(data_all, outlier, by = "Subject", all=TRUE)# wide to long
head(data_all_outlier)
data_all_l <- reshape::melt(data = data_all_outlier,
id.vars = c("Subject", "ROI","age","contrast","front","hemi","num_outliers"),
measure.vars=c("language", "control"),
variable.name = "condition",
value.name = "effect")
data_all_l<-dplyr::rename(data_all_l, condition = variable)
data_all_l<-dplyr::rename(data_all_l, effect = value)
#select LH or RH regions only
data_left<-data_all_l%>%dplyr::filter(ROI=="IFG"|ROI=="IFGorb"|ROI=="MFG"|
ROI=="AntTemp"|ROI=="PostTemp")
data_right <- filter(data_all_l, ROI == "R Post temp" | ROI == "R AntTemp" | ROI == "R MFG" | ROI == "R IFG" | ROI == "R IFG orb")
#create separate datasets per age
early_all <- filter(data_all_l, age == "early")
early_all_left <- filter(data_left, age == "early")
early_all_right <- filter(data_right, age == "early")
middle_all <- filter(data_all_l, age == "middle")
middle_all_left <- filter(data_left, age == "middle")
middle_all_right <- filter(data_right, age == "middle")
late_all <- filter(data_all_l, age == "late")
late_all_left <- filter(data_left, age == "late")
late_all_right <- filter(data_right, age == "late")
adult_all <- filter(data_all_l, age == "adult")
adult_all_left <- filter(data_left, age == "adult")
adult_all_right <- filter(data_right, age == "adult")
## Import and organize Volume data ##
#data_all_vol<-read.csv("~/Dropbox (MIT)/GitHub/MIT_kids_project/data/Final_Analyses/volume_data.csv")
data_all_vol <- read.csv("volume_data.csv")
#remove ANg
data_all_vol<-data_all_vol%>%dplyr::filter(ROI=="IFG"|ROI=="IFGorb"|ROI=="MFG"|
ROI=="AntTemp"|ROI=="PostTemp"| ROI=="R IFG orb"|
ROI=="R IFG"| ROI=="R MFG" | ROI=="R AntTemp" |ROI=="R Post temp")
#create a front/post variable
data_all_vol$front<-as.factor(ifelse(data_all_vol$ROI=="IFGorb"|data_all_vol$ROI=="IFG"|data_all_vol$ROI=="MFG"|
data_all_vol$ROI=="R IFG orb"|data_all_vol$ROI=="R IFG"|
data_all_vol$ROI=="R MFG","front","post"))
#create a lh/rh variable
data_all_vol$hemi<-as.factor(ifelse(data_all_vol$ROI=="IFG"|data_all_vol$ROI=="IFGorb"|data_all_vol$ROI=="MFG"|
data_all_vol$ROI=="AntTemp"|data_all_vol$ROI=="PostTemp",'lh','rh'))
#make factors
data_all_vol$group<-as.factor(data_all_vol$group)
data_all_vol$subs<-as.factor(data_all_vol$subs)
data_all_vol$ROI<-as.factor(data_all_vol$ROI)
#create seperate datasets per age
early_vol <- filter(data_all_vol, group == "early")
middle_vol <- filter(data_all_vol, group == "middle")
late_vol <- filter(data_all_vol, group == "late")
adult_vol <- filter(data_all_vol, group == "adult")
# Laterality
##long to wide for laterality
data_vol_w <- data_all_vol%>%dplyr::select (subs,ROI,overlap,group)
data_vol_w <-reshape(data_vol_w,
timevar = "ROI",
idvar = c("subs", "group"),
direction = "wide")
data_vol_w<-data_vol_w%>%
ungroup() %>%
mutate(IFG_lat=(overlap.IFG-`overlap.R IFG`)/(overlap.IFG+`overlap.R IFG`))%>%
mutate(IFGorb_lat=(overlap.IFGorb -`overlap.R IFG orb`)/(overlap.IFGorb+`overlap.R IFG orb`))%>%
mutate(MFG_lat=(overlap.MFG -`overlap.R MFG`)/(overlap.MFG +`overlap.R MFG`))%>%
mutate(AntTemp_lat=(overlap.AntTemp-`overlap.R AntTemp`)/(overlap.AntTemp+`overlap.R AntTemp`))%>%
mutate(PostTem_lat=(overlap.PostTemp -`overlap.R Post temp`)/(overlap.PostTemp +`overlap.R Post temp`))
# wide to long for laterality
data_lat_l <- reshape::melt(data = data_vol_w,
id.vars = c("subs", "group"),
measure.vars=c("IFG_lat","IFGorb_lat", "MFG_lat","AntTemp_lat","PostTem_lat"),
variable.name = "ROI",
value.name = "lat")
data_lat_l<-dplyr::rename(data_lat_l, ROI = variable)
data_lat_l<-dplyr::rename(data_lat_l, lat = value)
##create a front/post variable
data_lat_l$front<-as.factor(ifelse(data_lat_l$ROI=="IFGorb_lat"|data_lat_l$ROI=="IFG_lat"|data_lat_l$ROI=="MFG_lat","front","post"))
early_lat <- filter(data_lat_l, group == "early")
middle_lat <- filter(data_lat_l, group == "middle")
late_lat <- filter(data_lat_l, group == "late")
adult_lat <- filter(data_lat_l, group == "adult")
early_lat_front <- filter(early_lat, front == "front")
early_lat_temp <- filter(early_lat, front == "post")
middle_lat_front <- filter(middle_lat, front == "front")
middle_lat_temp <- filter(middle_lat, front == "post")
late_lat_front <- filter(late_lat, front == "front")
late_lat_temp <- filter(late_lat, front == "post")
adult_lat_front <- filter(adult_lat, front == "front")
adult_lat_temp <- filter(adult_lat, front == "post")
## mid vol typ
middle_lat$Subj<-substr(middle_lat$subs,1,9)
middle_lat_typ<-merge(x = middle_lat, y = mid_beh2[ , c("Subj", "dys")], by = "Subj", all.x=TRUE)%>%filter(dys=='typ')
## Import sp correlation data
all_sp_corr <- read.csv("../sp_corr_data.csv")
#create a front/post variable
all_sp_corr$front<-as.factor(ifelse(all_sp_corr$variable=="IFGorb"|all_sp_corr$variable=="IFG"|all_sp_corr$variable=="MFG"|all_sp_corr$variable=="R IFG orb"|all_sp_corr$variable=="R IFG"|
all_sp_corr$variable=="R MFG","front","post"))
#create a lh/rh variable
all_sp_corr$hemi<-as.factor(ifelse(all_sp_corr$variable=="IFG"|all_sp_corr$variable=="IFGorb"|all_sp_corr$variable=="MFG"| all_sp_corr$variable=="AntTemp"|all_sp_corr$variable=="PostTemp",'lh','rh'))
#make factors
all_sp_corr$group<-as.factor(all_sp_corr$group)
all_sp_corr$subs<-as.factor(all_sp_corr$subs)
all_sp_corr$variable<-as.factor(all_sp_corr$variable)
names(all_sp_corr)[5] <- "ROI"
early_sp <- filter(all_sp_corr, group == "early")
middle_sp <- filter(all_sp_corr, group == "middle")
late_sp <- filter(all_sp_corr, group == "late")
adult_sp <-filter(all_sp_corr, group == "adult")
spcorr_averages <- ggbarplot(all_sp_corr, x = "group", y = "value", add = c("mean_se"), width = c(0.6), size = c(.5), alpha = 1, fill= "hemi", palette = c("#ef8a62", "#f7f7f7"), position = position_dodge(.8),  ylab = "Sp Corr", ylim = c(0,1), xlab = "Group") + geom_hline(yintercept=0, linetype="solid", color = "black") + theme_classic() + theme_classic(base_size = 18) + theme(legend.position = "bottom") + ggtitle("Dataset 1")
spcorr_averages
#select LH front
data_left_front<-data_left%>%dplyr::filter(ROI=="IFG"|ROI=="IFGorb"|ROI=="MFG")
data_left_temp<-data_left%>%dplyr::filter(ROI=="AntTemp"|ROI=="PostTemp")
names()
names(early_all_left)
early_all_left_front<-early_all_left%>%filter(front=='1')
View(early_all_left_front)
early_all_left$front
#frontal only
early_all_left_front<-early_all_left%>%filter(front=='front')
early_all_left_temp<-early_all_left%>%filter(front=='post')
early_all_left_front<-early_all_left%>%filter(front=='front')
m1_1_f<-lmer(effect~condition+(1|Subject)+(1|ROI),data=early_all_left_front)
summary(m1_1_f)
lsmeans(m1_1_f, list(pairwise ~ condition), adjust = "tukey")
m1_1<-lmer(effect~condition*front+(1|Subject)+(1|ROI),data=early_all_left)
summary(m1_1)
middle_all_left_front<-middle_all_left%>%filter(front=='front')
m2_f<-lmer(effect~condition+(1|Subject)+(1|ROI),data=middle_all_left_temp)
middle_all_left_front<-middle_all_left%>%filter(front=='front')
m2_f<-lmer(effect~condition+(1|Subject)+(1|ROI),data=middle_all_left_front)
summary(m2_f)
summary(m1_1_t)
early_all_left_temp<-early_all_left%>%filter(front=='post')
m1_1_t<-lmer(effect~condition+(1|Subject)+(1|ROI),data=early_all_left_temp)
summary(m1_1_t)
middle_all_left_temp<-middle_all_left%>%filter(front=='post')
m2_t<-lmer(effect~condition+(1|Subject)+(1|ROI),data=middle_all_left_temp)
summary(m2_t)
lsmeans(m2_t, list(pairwise ~ condition), adjust = "tukey")
middle_all_left_front<-middle_all_left%>%filter(front=='front')
m2_f<-lmer(effect~condition+(1|Subject)+(1|ROI),data=middle_all_left_front)
summary(m2_f)
late_all_left_temp<-late_all_left%>%filter(front=='post')
m3_t<-lmer(effect~condition+(1|Subject)+(1|ROI),data=late_all_left_temp)
summary(m3_t)
summary(lmer(effect~condition+(1|Subject)+(1|ROI),data=late_all_left))
m1_1<-lmer(effect~condition+(1|Subject)+(1|ROI),data=early_all_left)
summary(m1_1)
summary(lmer(effect~condition+(1|Subject)+(1|ROI),data=middle_all_left))
summary(lmer(effect~condition+(1|Subject)+(1|ROI),data=late_all_left))
m3_t<-lmer(effect~condition+(1|Subject)+(1|ROI),data=late_all_left_temp)
summary(m3_t)
late_all_left_front<-late_all_left%>%filter(front=='front')
m3_f<-lmer(effect~condition+(1|Subject)+(1|ROI),data=late_all_left_front)
summary(m3_f)
names(early_lat)
t.test(middle_lat$lat, mu = 0, alternative = "two.sided")
t.test(early_lat$lat, mu = 0, alternative = "two.sided")
t.test(early_lat_temp$lat, mu = 0, alternative = "two.sided") #temp
t.test(early_lat_front$lat, mu = 0, alternative = "two.sided") #front
t.test(middle_lat_temp$lat, mu = 0, alternative = "two.sided") #temp
t.test(middle_lat_front$lat, mu = 0, alternative = "two.sided") #front
t.test(late_lat_temp$lat, mu = 0, alternative = "two.sided") #temp
t.test(late_lat_front$lat, mu = 0, alternative = "two.sided") #front
# create pairwise correlations between local LH ROIs (front - front)
df_lh_frontal <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
tmp<-rs_w_lh[,1:5]%>%filter(Subject==sub)
x<-cor(tmp[,3:5],use = "complete.obs")
x2<-psych::fisherz(x)
x2[which(x2==Inf)]<-0.9999
mean_rs<-mean(x2)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_frontal<-rbind(df_lh_frontal, d2)
}
sub_list<-unique(rs_w$Subject)
setwd("~/Dropbox (MIT)/GitHub/MIT_kids_project/data/Final_Analyses")
rs<-read.csv("AliceKids_RS_TimeSeries_ZScored.csv")
rs$age<-as.factor(ifelse(grepl('inside', rs$Subject), 'late', ifelse(grepl('reader', rs$Subject), 'middle', ifelse(grepl('FACT', rs$Subject), 'early','adult'))))
unique(rs$Subject)
#remove ANG
rs <-rs%>%dplyr::select(Subject,ROI,starts_with("T_")) %>% filter(ROI!="Lang_RH_AngG"& ROI !="Lang_LH_AngG")
rs_l <- melt(rs, id.vars=c("Subject", "ROI"))
#long to wide
rs_w<- reshape(rs_l,
timevar = "ROI",
idvar = c("Subject","variable"),
direction = "wide")
sub_list<-unique(rs_w$Subject)
# create pairwise correlations among ALL ROIs for each subject,
df <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
tmp<-rs_w%>%filter(Subject==sub)
x<-cor(tmp[,3:7],use = "pairwise.complete.obs")
# x2<-psych::fisherz(x)
x[which(x==Inf)]<-0.9999
mean_rs<-mean(x)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df<-rbind(df, d2)
}
df$mean_rs<-as.numeric(df$mean_rs)
#add age
df$age<-as.factor(ifelse(grepl('inside', df$sub), 'late', ifelse(grepl('reader', df$sub), 'middle', ifelse(grepl('FACT', df$sub), 'early','adult'))))
sum_all<-df%>%group_by(age)%>%summarise(Average=mean(mean_rs))
sum_all
rs_early<-df%>%filter(age=="early")
rs_middle<-df%>%filter(age=="middle")
rs_late<-df%>%filter(age=="late")
sub_list<-unique(rs_w$Subject)
# create pairwise correlations between local LH ROIs (front - front)
df_lh_frontal <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
tmp<-rs_w_lh[,1:5]%>%filter(Subject==sub)
x<-cor(tmp[,3:5],use = "complete.obs")
x2<-psych::fisherz(x)
x2[which(x2==Inf)]<-0.9999
mean_rs<-mean(x2)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_frontal<-rbind(df_lh_frontal, d2)
}
names(rs_w)
temp_cols
# create pairwise correlations between local LH ROIs (front - front)
df_lh_frontal <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
# tmp<-rs_w[,1:5]%>%filter(Subject==sub)
x<-cor(rs_w[,3:5],use = "complete.obs")
x2<-psych::fisherz(x)
x2[which(x2==Inf)]<-0.9999
mean_rs<-mean(x2)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_frontal<-rbind(df_lh_frontal, d2)
}
df_lh_frontal$mean_rs<-as.numeric(df_lh_frontal$mean_rs)
df_lh_frontal$frontal <- "frontal"
# create pairwise correlations between local LH ROIs (front - front)
df_lh_frontal <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
# tmp<-rs_w[,1:5]%>%filter(Subject==sub)
x<-cor(rs_w[,3:5],use = "complete.obs")
x2<-psych::fisherz(x)
x2[which(x2==Inf)]<-0.9999
mean_rs<-mean(x2)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_frontal<-rbind(df_lh_frontal, d2)
}
df_lh_frontal$mean_rs<-as.numeric(df_lh_frontal$mean_rs)
df_lh_frontal$frontal <- "frontal"
#add age
df_lh_frontal$age<-as.factor(ifelse(grepl('inside', df_lh_frontal$sub), 'late', ifelse(grepl('reader', df_lh_frontal$sub), 'middle', ifelse(grepl('FACT', df_lh_frontal$sub), 'early','adult'))))
df_lh_frontal_means<-df_lh_frontal%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_lh_frontal_means$frontal <- "front"
names(rs_w[,6:7])
sub_list<-unique(rs_w$Subject)
# create pairwise correlations between local LH ROIs (front - front)
df_lh_frontal <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
# tmp<-rs_w[,1:5]%>%filter(Subject==sub)
x<-cor(rs_w[,3:5],use = "complete.obs")
x2<-psych::fisherz(x)
x2[which(x2==Inf)]<-0.9999
mean_rs<-mean(x2)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_frontal<-rbind(df_lh_frontal, d2)
}
df_lh_frontal$mean_rs<-as.numeric(df_lh_frontal$mean_rs)
df_lh_frontal$frontal <- "frontal"
#add age
df_lh_frontal$age<-as.factor(ifelse(grepl('inside', df_lh_frontal$sub), 'late', ifelse(grepl('reader', df_lh_frontal$sub), 'middle', ifelse(grepl('FACT', df_lh_frontal$sub), 'early','adult'))))
df_lh_frontal_means<-df_lh_frontal%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_lh_frontal_means$frontal <- "front"
### Temp
df_lh_temporal<- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
# tmp<-rs_w[,temp_cols]%>%filter(Subject==sub)
x<-cor(rs_w[,6:7],use = "pairwise.complete.obs")
x2<-psych::fisherz(x)
x2[which(x2==Inf)]<-0.9999
mean_rs<-mean(x2)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_temporal<-rbind(df_lh_temporal, d2)
}
df_lh_temporal$mean_rs<-as.numeric(df_lh_temporal$mean_rs)
#add age
df_lh_temporal$age<-as.factor(ifelse(grepl('inside', df_lh_temporal$sub), 'late', ifelse(grepl('reader', df_lh_temporal$sub), 'middle', ifelse(grepl('FACT', df_lh_temporal$sub), 'early','adult'))))
df_lh_temporal_means<-df_lh_temporal%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_lh_temporal_means$frontal <- "temp"
local_pairs <- rbind(df_lh_temporal_means, sum_all_lh_frontal)
View(df_lh_temporal_means)
View(rs_early)
View(df_lh_frontal)
df_lh_front_early<-df_lh_front%>%filter(age='early')
df_lh_front_early<-df_lh_frontal%>%filter(age='early')
df_lh_front_early<-df_lh_frontal%>%dplyr::filter(age='early')
df_lh_front_early<-df_lh_frontal%>%dplyr::filter(age=='early')
View(df_lh_front_early)
df_lh_temporal<- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
# tmp<-rs_w[,temp_cols]%>%filter(Subject==sub)
x<-cor(rs_w[,6:7],use = "pairwise.complete.obs")
x2<-psych::fisherz(x)
x2[which(x2==Inf)]<-0.9999
mean_rs<-mean(x2)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_temporal<-rbind(df_lh_temporal, d2)
}
View(df_lh_temporal)
### Temp
df_lh_temporal<- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
# tmp<-rs_w[,temp_cols]%>%filter(Subject==sub)
x<-cor(rs_w[,6:7],use = "pairwise.complete.obs")
x2<-psych::fisherz(x)
x2[which(x2==Inf)]<-0.9999
mean_rs<-mean(x2)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_temporal<-rbind(df_lh_temporal, d2)
}
df_lh_temporal$mean_rs<-as.numeric(df_lh_temporal$mean_rs)
sub_list<-unique(rs_w$Subject)
# create pairwise correlations between local LH ROIs (front - front)
df_lh_frontal <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
tmp_f<-rs_w[,3:5]%>%filter(Subject==sub)
x_f<-cor(tmp_f,use = "complete.obs")
#x2<-psych::fisherz(x)
x_f[which(x_f==Inf)]<-0.9999
mean_rs_f<-mean(x_f)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d_f<-cbind(mean_rs_f,sub)
df_lh_frontal<-rbind(df_lh_frontal, d_f)
}
df_lh_frontal <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
tmp<-rs_w[,1:5]%>%filter(Subject==sub)
x<-cor(tmp[,3:5],use = "complete.obs")
#x2<-psych::fisherz(x)
x[which(x==Inf)]<-0.9999
mean_rs<-mean(x)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_frontal<-rbind(df_lh_frontal, d2)
}
df_lh_frontal$mean_rs<-as.numeric(df_lh_frontal$mean_rs)
df_lh_frontal$frontal <- "frontal"
#add age
df_lh_frontal$age<-as.factor(ifelse(grepl('inside', df_lh_frontal$sub), 'late', ifelse(grepl('reader', df_lh_frontal$sub), 'middle', ifelse(grepl('FACT', df_lh_frontal$sub), 'early','adult'))))
df_lh_frontal_means<-df_lh_frontal%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_lh_frontal_means$frontal <- "front"
View(df_lh_frontal)
tmp
names(tmp)
names()
names(rs_w)
sub_list<-unique(rs_w$Subject)
###FRONT ####
# create pairwise correlations between local LH ROIs (front - front)
df_lh_frontal <- data.frame()
#df<-data.frame(mean=NA)[numeric(0), ]
for (sub in sub_list){
tmp<-rs_w[,1:5]%>%filter(Subject==sub)
x<-cor(tmp[,3:5],use = "complete.obs")
#x2<-psych::fisherz(x)
x[which(x==Inf)]<-0.9999
mean_rs<-mean(x)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_frontal<-rbind(df_lh_frontal, d2)
}
df_lh_frontal$mean_rs<-as.numeric(df_lh_frontal$mean_rs)
df_lh_frontal$frontal <- "frontal"
#add age
df_lh_frontal$age<-as.factor(ifelse(grepl('inside', df_lh_frontal$sub), 'late', ifelse(grepl('reader', df_lh_frontal$sub), 'middle', ifelse(grepl('FACT', df_lh_frontal$sub), 'early','adult'))))
df_lh_frontal_means<-df_lh_frontal%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_lh_frontal_means$frontal <- "front"
##create files by age
df_lh_front_early<-df_lh_frontal%>%dplyr::filter(age=='early')
df_lh_front_middle<-df_lh_frontal%>%filter(age=='middle')
df_lh_front_late<-df_lh_frontal%>%filter(age=='late')
### TEMP ####
df_lh_temporal<- data.frame()
# create pairwise correlations between local LH ROIs (temp - temp)
for (sub in sub_list){
tmp<-rs_w[,1:7]%>%filter(Subject==sub)
x<-cor(tmp[,5:7],use = "complete.obs")
#x2<-psych::fisherz(x)
x[which(x==Inf)]<-0.9999
mean_rs<-mean(x)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_temporal<-rbind(df_lh_temporal, d2)
}
df_lh_temporal$mean_rs<-as.numeric(df_lh_temporal$mean_rs)
df_lh_temporal$frontal <- "temp"
#add age
df_lh_temporal$age<-as.factor(ifelse(grepl('inside', df_lh_temporal$sub), 'late', ifelse(grepl('reader', df_lh_temporal$sub), 'middle', ifelse(grepl('FACT', df_lh_temporal$sub), 'early','adult'))))
df_lh_temporal_means<-df_lh_temporal%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_lh_temporal_means$frontal <- "temp"
View(df_lh_front_early)
t.test(df_lh_front_early$mean_rs)
t.test(df_lh_front_middle$mean_rs)
t.test(df_lh_front_late$mean_rs)
t.test(df_lh_temp_early$mean_rs)
### TEMP ####
df_lh_temporal<- data.frame()
# create pairwise correlations between local LH ROIs (temp - temp)
for (sub in sub_list){
tmp<-rs_w[,1:7]%>%filter(Subject==sub)
x<-cor(tmp[,5:7],use = "complete.obs")
#x2<-psych::fisherz(x)
x[which(x==Inf)]<-0.9999
mean_rs<-mean(x)
#mean_rs<- psych::fisherz(mean(x)) #Fisher transform and create a mean of correlations
d2<-cbind(mean_rs,sub)
df_lh_temporal<-rbind(df_lh_temporal, d2)
}
df_lh_temporal$mean_rs<-as.numeric(df_lh_temporal$mean_rs)
df_lh_temporal$frontal <- "temp"
#add age
df_lh_temporal$age<-as.factor(ifelse(grepl('inside', df_lh_temporal$sub), 'late', ifelse(grepl('reader', df_lh_temporal$sub), 'middle', ifelse(grepl('FACT', df_lh_temporal$sub), 'early','adult'))))
df_lh_temporal_means<-df_lh_temporal%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_lh_temporal_means$frontal <- "temp"
##create files by age
df_lh_temp_early<-df_lh_temporal%>%dplyr::filter(age=='early')
df_lh_temp_middle<-df_lh_temporal%>%filter(age=='middle')
df_lh_temp_late<-df_lh_temporal%>%filter(age=='late')
t.test(df_lh_temp_early$mean_rs)
t.test(df_lh_temp_middle$mean_rs)
t.test(df_lh_temp_late$mean_rs)
## create front-temporal corr (non-local)
df2 <- data.frame()
for (sub in sub_list){
tmp<-rs_w%>%filter(Subject==sub)
b<-cor(tmp[,3:7],use = "complete.obs")
b2<-psych::fisherz(b)
b2[which(b2==Inf)]<-0.9999
mean_rs2<-mean(b2[1:3,4:5])
d2<-cbind(mean_rs2,sub)
df2<-rbind(df2, d2)
}
df2$mean_rs<-as.numeric(df2$mean_rs)
df2$age<-as.factor(ifelse(grepl('inside', df2$sub), 'late', ifelse(grepl('reader', df$sub), 'middle', ifelse(grepl('FACT', df$sub), 'early','adult'))))
df_non_local <- df2
df_non_local_means<-df_non_local%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_non_local_means$frontal <- "non-local"
##create files by age
df_non_local_early<-df_non_local%>%dplyr::filter(age=='early')
df_non_local_mid<-df_non_local%>%filter(age=='middle')
df_non_local_late<-df_non_local%>%filter(age=='late')
## create front-temporal corr (non-local)
df2 <- data.frame()
for (sub in sub_list){
tmp<-rs_w%>%filter(Subject==sub)
b2<-cor(tmp[,3:7],use = "complete.obs")
#b2<-psych::fisherz(b)
b2[which(b2==Inf)]<-0.9999
mean_rs2<-mean(b2[1:3,4:5])
d2<-cbind(mean_rs2,sub)
df2<-rbind(df2, d2)
}
df2$mean_rs<-as.numeric(df2$mean_rs)
df2$age<-as.factor(ifelse(grepl('inside', df2$sub), 'late', ifelse(grepl('reader', df$sub), 'middle', ifelse(grepl('FACT', df$sub), 'early','adult'))))
df_non_local <- df2
df_non_local_means<-df_non_local%>%group_by(age)%>%summarise(Average=mean(mean_rs))
df_non_local_means$frontal <- "non-local"
##create files by age
df_non_local_early<-df_non_local%>%dplyr::filter(age=='early')
df_non_local_mid<-df_non_local%>%filter(age=='middle')
df_non_local_late<-df_non_local%>%filter(age=='late')
t.test(df_non_local_early$mean_rs)
t.test(df_non_local_mid$mean_rs)
t.test(df_non_local_late$mean_rs)
#### Load and organize packages ####
Packages <- c("dplyr", "stats", "psych", "ggplot2", "lme4","lm.beta", "lmerTest","Jmisc","lavaan",
"gridExtra","olsrr",'relaimpo','BayesFactor','MASS','psych','mice','VIM','psych',"rstatix","pastecs","sjmisc","bayestestR")
lapply(Packages, library, character.only = TRUE)
#### Organize ####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# Import combined dataset #
source("bf_function.R")
all<-read.csv("all_datasets.csv")
all$study<-as.factor(ifelse(grepl('READER', all$ID), 'reader', ifelse(grepl('READ', all$ID), 'READ', ifelse(grepl('ABCD',  all$ID), 'ABCD','none'))))
all2<-na.omit(all)
table(all$grade)
table(all2$grade,all2$DD)
table(all$grade,all2$DD)
table(all$grade,all$DD)
all<-read.csv("all_datasets.csv")
all$study<-as.factor(ifelse(grepl('READER', all$ID), 'reader', ifelse(grepl('READ', all$ID), 'READ', ifelse(grepl('ABCD',  all$ID), 'ABCD','none'))))
all2<-na.omit(all)
all2$DD<-as.factor(all2$DD) #define factor for dyslexia group
all2$study<-as.factor(all2$study) #define factor for age group
table(all$study,all$DD)
